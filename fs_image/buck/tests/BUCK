load("//fs_image/buck:oss_shim.bzl", "python_library", "python_unittest")
load("//fs_image/buck:image.bzl", "image")

python_library(
    name = "coverage_test_helper",
    srcs = ["coverage_test_helper.py"],
    base_module = "",
)

image.python_unittest(
    name = "test-image-python-unittest",
    srcs = ["test_image_python_unittest.py"],
    layer = "//fs_image/compiler/tests:only-for-tests-read-only-host-clone",
    needed_coverage = [(100, ":coverage_test_helper")],
    deps = [":coverage_test_helper"],
    env = {"kitteh": "meow"},
)

image.python_unittest(
    name = "test-boot-image-python-unittest",
    srcs = ["test_image_python_unittest.py"],
    layer = "//tupperware/image/slimos:slimos-stable",
    needed_coverage = [(100, ":coverage_test_helper")],
    deps = [":coverage_test_helper"],
    env = {"kitteh": "meow"},
    boot = True,
)

image.cpp_unittest(
    name = "test-image-cpp-unittest",
    srcs = ["ImageCppUnittestTest.cpp"],
    layer = "//fs_image/compiler/tests:only-for-tests-read-only-host-clone",
    env = {"kitteh": "meow"},
)

image.cpp_unittest(
    name = "test-boot-image-cpp-unittest",
    srcs = ["ImageCppUnittestTest.cpp"],
    layer = "//tupperware/image/slimos:slimos-stable",
    env = {"kitteh": "meow"},
    boot = True,
)

# Ensures that BUCK_BUILD_ID isn't just missing from the container tests by
# accident, but rather that it's explicitly sanitized.
python_unittest(
    name = "test-unsanitized-env",
    srcs = ["test_unsanitized_env.py"],
    env = {"kitteh": "meow"},
)

# The following rules will build a basic RPM in an rpmbuild_layer and test that
# the RPM and sources are as expected (in the layer).
export_file(name = "toy.spec")

# Using export file like this (note the trailing slash) for sources means that
# it won't have the top dir (toy_srcs/) included as part of the sources tarball.
export_file(
    name = "toy_srcs",
    src = "toy_srcs/",
)

image.rpmbuild_layer(
    name = "toy-rpm-build",
    parent_layer = "//tupperware/image/slimos:slimos-rpmbuild-base",
    specfile = ":toy.spec",
    source = ":toy_srcs",
)

image.python_unittest(
    name = "test-toy-rpm-build",
    srcs = ["test_toy_rpm_build_unittest.py"],
    layer = ":toy-rpm-build",
    deps = ["//fs_image/rpm:rpm_metadata"],
)
